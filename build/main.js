(()=>{var __webpack_modules__={"./src/js/install-theme.js":
/*!*********************************!*\
  !*** ./src/js/install-theme.js ***!
  \*********************************/()=>{eval("/**\r\n * This is for the future to make this theme dynamic as it comes with naming on npm install theme!\r\n * @category - Under construction\r\n */\r\n\r\n// import inquirer from 'inquirer';\r\n// import StringReplaceWebpackPlugin from 'string-replace-webpack-plugin';\r\n\r\n\r\n// inquirer\r\n//   .prompt([\r\n//     {\r\n//       type: 'input',\r\n//       name: 'BK_STARTER_THEME_PATH',\r\n//       message: 'Enter the value to replace BK_STARTER_THEME_PATH:'\r\n//     }\r\n//   ])\r\n//   .then(answers => {\r\n//     const webpackConfig = {\r\n//       // ...\r\n//       plugins: [\r\n//         new StringReplaceWebpackPlugin({\r\n//           search: 'BK_STARTER_THEME_PATH',\r\n//           replace: answers.BK_STARTER_THEME_PATH\r\n//         })\r\n//       ]\r\n//     };\r\n\r\n//     // Run Webpack with the updated configuration\r\n//     // ...\r\n//   });\n\n//# sourceURL=webpack://webpack/./src/js/install-theme.js?")},"./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/()=>{eval("\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    /**************************************************************************************************/\r\nconsole.log(\"test\");\r\nfunction img2svg(obj) {\r\n    //  Replace all SVG images with inline SVG \r\n    jQuery(obj).each(function() {\r\n        var $img = jQuery(this);\r\n        var imgID = $img.attr('id');\r\n        var imgClass = $img.attr('class');\r\n        var imgURL = $img.attr('src');\r\n        var imgStyle = $img.attr('style');\r\n        jQuery.get(imgURL, function(data) {\r\n    //          Get the SVG tag, ignore the rest\r\n            var $svg = jQuery(data).find('svg');\r\n    //         Add replaced image's ID to the new SVG\r\n            if (typeof imgID !== 'undefined') {\r\n                $svg = $svg.attr('id', imgID);\r\n            }\r\n    //         Add replaced image\\'s classes to the new SVG\r\n            if (typeof imgClass !== 'undefined') {\r\n                $svg = $svg.attr('class', imgClass + ' replaced-svg');\r\n            }       \r\n    //         Add style image\\'s to the new SVG\r\n    if (typeof imgStyle !== 'undefined') {\r\n        $svg = $svg.attr('style', imgStyle);\r\n    }\r\n    //         Remove any invalid XML tags as per http:validator.w3.org\r\n            $svg = $svg.removeAttr('xmlns:a');\r\n    //         Replace image with new SVG\r\n            $img.replaceWith($svg);\r\n            var $btn = $svg.parent();\r\n            if ($btn.hasClass('btn-toShop')) {\r\n                var iconBG = $btn.css('backgroundColor');\r\n                $svg.find('.iconBG').attr(\"fill\", iconBG);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/****************************************************************************** */\r\n\r\nimg2svg('img[src$=\".svg\"]');\r\n\r\n/****************************************************************************** */\r\n\r\nfunction assignActiveHeaderNav() {\r\n  // assign 'active' class on current nav item\r\n  const bodyClass = document.body.getAttribute(\"class\");\r\n  let headerNavLink = document.querySelectorAll(\".header-nav-links\");\r\n  // Use regular expression to search for \"page-id-{N}\" pattern\r\n  const match = bodyClass.match(/page-id-(\\d+)/);\r\n\r\n  if (match) {\r\n      // Extract the page ID from the match object\r\n      const pageId = match[1];\r\n      // console.log(\"Page ID:\", pageId);\r\n      headerNavLink.forEach((link) => {\r\n          // console.log(link.getAttribute(\"data-page-id\"));\r\n          if( link.getAttribute(\"data-page-id\") == pageId ) {\r\n              link.classList.add(\"active\"); \r\n          } else {\r\n              link.classList.remove(\"active\");\r\n          }\r\n      });\r\n  } else {\r\n      console.log(\"Page ID not found in body class.\");\r\n  }\r\n}\r\n\r\n// assignActiveHeaderNav();\r\n\r\n/****************************************************************************** */\r\n\r\n/**\r\n * Filter posts\r\n * Action is hooking on filter and sorting posts\r\n */\r\n\r\njQuery('.secondary-nav-category-term, #sort-posts').on(\"click change\", function(e){ // class of root/inc/magic_login/components/modal/first-step.php button\r\n\r\n    e.preventDefault();\r\n    var clickedElem = jQuery(this);\r\n    console.log(\"clicked!\")\r\n    /**\r\n     * Check if clicked element is a filter, in that case toggle active class\r\n     */\r\n    if( clickedElem.hasClass(\"secondary-nav-category-term\") ) {\r\n        jQuery(\".secondary-nav-category-term\").removeClass(\"active\");\r\n    \r\n        jQuery(this).addClass(\"active\");\r\n    }\r\n\r\n    var navCatID = jQuery(\".secondary-nav-category-term.active\").attr(\"data-cat-id\");\r\n\r\n    var postOrder = jQuery('#sort-posts').val();\r\n    console.log(postOrder);\r\n\r\n    // Cookies.set('userToken', userTokenVar, { expires: 1 }); // docs: https://github.com/js-cookie/js-cookie\r\n\r\n    var formData = {\r\n      action        : 'filter_posts',\r\n      page_id       : generic_ajax_object.curr_post_id,\r\n      category_id   : navCatID,\r\n      order         : postOrder,\r\n    };\r\n\r\n    \r\n\r\n    jQuery.ajax({\r\n      type      : 'POST',\r\n      url       :  generic_ajax_object.ajax_url,\r\n      dataType  : 'html',\r\n      data      : formData,\r\n      success: function(data) {\r\n\r\n        jQuery('.posts-ajax-cards-row').html(data);\r\n\r\n          var loadingWheel = jQuery('#loading-wheel').hide();\r\n          //Attach the event handler to any element\r\n          jQuery(document)\r\n            .ajaxStart(function () {\r\n               //ajax request went so show the loading image\r\n                // loadingWheel.show();\r\n            })\r\n          .ajaxStop(function () {\r\n              //got response so hide the loading image\r\n            //    loadingWheel.hide();\r\n           });\r\n\r\n        },\r\n\r\n        // return data;\r\n        error: function(request, status, error) {\r\n          console.log(request);\r\n          alert(request.responseText);\r\n          console.log(error);\r\n        }\r\n\r\n      });\r\n});\r\n\r\n/****************************************************************** */\r\n\r\n/**\r\n * Load more\r\n * Action is hooking on filter and sorting posts\r\n */\r\nvar offset = 0;\r\nvar maxNumPagesCounter = 1;\r\n jQuery('#load-more, #sort-posts').on(\"click change\", function(e){ // class of root/inc/magic_login/components/modal/first-step.php button\r\n\r\n    e.preventDefault();\r\n\r\n    if( jQuery(this).hasClass(\"load-more-btn\") ) {\r\n        maxNumPagesCounter++;\r\n        offset += 11;\r\n    }\r\n\r\n    /**\r\n     * Clicking on filter item again requires offset, maxNumPagesCounter to be reseted and load more button to be shown again.\r\n     */\r\n    jQuery('.secondary-nav-category-term').on(\"click\", function(e) {\r\n        jQuery(\"#load-more\").show();\r\n        offset = 0;\r\n        maxNumPagesCounter = 1;\r\n    });\r\n\r\n    /**\r\n     * Hide load more button if all posts are loaded\r\n     */\r\n    if( maxNumPagesCounter == jQuery(\"#news-hub-wrap\").attr(\"data-max-num-pages\") ) {\r\n        jQuery(\"#load-more\").hide();\r\n    }\r\n\r\n    var postOrder = jQuery('#sort-posts').val();\r\n\r\n    /**\r\n     * Load more posts but only within filter scope\r\n     */\r\n    var activeID = jQuery(\".secondary-nav-category-term.active\").attr(\"data-cat-id\");\r\n\r\n    var formData = {\r\n      action    : 'load_more_posts',\r\n      page_id   : generic_ajax_object.curr_post_id,\r\n      activeID  : activeID,\r\n      offset    : offset,\r\n      order     : postOrder,\r\n    };\r\n\r\n    jQuery.ajax({\r\n      type: 'POST',\r\n      url:  generic_ajax_object.ajax_url,\r\n      dataType: 'html',\r\n      data: formData,\r\n      success: function(data) {\r\n        console.log(data);\r\n\r\n        jQuery(data).appendTo('.posts-ajax-cards-row');\r\n\r\n        //   var loadingWheel = jQuery('#loading-wheel').hide();\r\n          //Attach the event handler to any element\r\n          jQuery(document)\r\n            .ajaxStart(function () {\r\n               //ajax request went so show the loading image\r\n                // loadingWheel.show();\r\n            })\r\n          .ajaxStop(function () {\r\n              //got response so hide the loading image\r\n            //    loadingWheel.hide();\r\n           });\r\n\r\n        },\r\n\r\n        // return data;\r\n        error: function(request, status, error) {\r\n          console.log(request);\r\n          alert(request.responseText);\r\n          console.log(error);\r\n        }\r\n\r\n      });\r\n});\r\n\r\n/****************************************************************** */\r\n\r\n });\r\n \r\n\r\nwindow.addEventListener('scroll', function() {\r\n    // Your code here\r\n\r\n});\r\n\r\nwindow.addEventListener('resize', function() {\r\n    // Your code here\r\n    \r\n});\r\n\n\n//# sourceURL=webpack://webpack/./src/js/main.js?")}};__webpack_modules__["./src/js/install-theme.js"]();var __webpack_exports__={};__webpack_modules__["./src/js/main.js"]()})();